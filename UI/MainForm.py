# Form implementation generated from reading ui file 'MainForm.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from helper.api_helper import view
import mysql.connector as mc


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainPage")
        MainWindow.resize(523, 579)
        MainWindow.setMinimumSize(QtCore.QSize(523, 579))
        MainWindow.setMaximumSize(QtCore.QSize(523, 579))
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.PNL_Search = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.PNL_Search.setGeometry(QtCore.QRect(60, 20, 461, 22))
        self.PNL_Search.setObjectName("PNL_Search")
        self.ID_Search = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.ID_Search.setGeometry(QtCore.QRect(10, 20, 41, 22))
        self.ID_Search.setObjectName("ID_Search")
        self.ToolButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.ToolButton.setGeometry(QtCore.QRect(32, 510, 471, 31))
        self.ToolButton.setObjectName("ToolButton")
        self.StatusTable = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.StatusTable.setGeometry(QtCore.QRect(10, 50, 511, 451))
        self.StatusTable.setObjectName("StatusTable")
        self.StatusTable.setColumnCount(6)
        self.StatusTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.StatusTable.setHorizontalHeaderItem(5, item)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 523, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.PNL_Search.setPlaceholderText(_translate("MainWindow", "Frist Name | Last Name | PhoneNumber"))
        self.ID_Search.setPlaceholderText(_translate("MainWindow", "ID"))
        self.ToolButton.setText(_translate("MainWindow", "&ADD &EDIT &DELETE"))
        item = self.StatusTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.StatusTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "First Name"))
        item = self.StatusTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Last Name"))
        item = self.StatusTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Phone Number"))
        item = self.StatusTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "ZIP Code"))
        item = self.StatusTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Address"))
        self.View_Member()
        self.ID_Search.returnPressed.connect(self.search_member)
        self.PNL_Search.returnPressed.connect(self.search_member)
        

    def View_Member(self):
        view(name_table="info",tableWidget=self.StatusTable)
        
    def search_member(self):
        id_s = self.ID_Search
        member_s = self.PNL_Search
        
        if id_s.text() != "":
            view(name_table="info",tableWidget=self.StatusTable,id=id_s.text())
        else :
            if member_s.text() != "":
                view(name_table="info",tableWidget=self.StatusTable,user=member_s.text())

